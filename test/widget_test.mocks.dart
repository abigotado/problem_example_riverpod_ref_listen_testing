// Mocks generated by Mockito 5.3.0 from annotations
// in problem_example_riverpod_ref_listen_testing/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:problem_example_riverpod_ref_listen_testing/models/pagination_list_model.dart'
    as _i3;
import 'package:problem_example_riverpod_ref_listen_testing/models/study_direction_model.dart'
    as _i5;
import 'package:problem_example_riverpod_ref_listen_testing/study_directions_repository.dart'
    as _i4;
import 'package:problem_example_riverpod_ref_listen_testing/study_directions_service.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStudyDirectionsService_0 extends _i1.SmartFake
    implements _i2.StudyDirectionsService {
  _FakeStudyDirectionsService_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakePaginationListModel_1<T> extends _i1.SmartFake
    implements _i3.PaginationListModel<T> {
  _FakePaginationListModel_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [StudyDirectionsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockStudyDirectionsRepository extends _i1.Mock
    implements _i4.StudyDirectionsRepository {
  MockStudyDirectionsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.StudyDirectionsService get service => (super.noSuchMethod(
          Invocation.getter(#service),
          returnValue:
              _FakeStudyDirectionsService_0(this, Invocation.getter(#service)))
      as _i2.StudyDirectionsService);
  @override
  set paginationModel(
          _i3.PaginationListModel<_i5.StudyDirectionModel>? _paginationModel) =>
      super.noSuchMethod(Invocation.setter(#paginationModel, _paginationModel),
          returnValueForMissingStub: null);
  @override
  _i6.Future<_i3.PaginationListModel<_i5.StudyDirectionModel>> getPagination(
          [int? page]) =>
      (super.noSuchMethod(Invocation.method(#getPagination, [page]),
          returnValue:
              _i6.Future<_i3.PaginationListModel<_i5.StudyDirectionModel>>.value(
                  _FakePaginationListModel_1<_i5.StudyDirectionModel>(
                      this, Invocation.method(#getPagination, [page])))) as _i6
          .Future<_i3.PaginationListModel<_i5.StudyDirectionModel>>);
  @override
  _i6.Future<_i3.PaginationListModel<_i5.StudyDirectionModel>?> fetchPagination(
          int? page,
          {bool? isRefresh = false}) =>
      (super.noSuchMethod(
          Invocation.method(#fetchPagination, [page], {#isRefresh: isRefresh}),
          returnValue: _i6.Future<
              _i3.PaginationListModel<_i5.StudyDirectionModel>?>.value()) as _i6
          .Future<_i3.PaginationListModel<_i5.StudyDirectionModel>?>);
}
